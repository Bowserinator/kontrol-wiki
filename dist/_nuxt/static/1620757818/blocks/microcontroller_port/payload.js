__NUXT_JSONP__("/blocks/microcontroller_port", (function(a,b,c,d){return {data:[{slug:"microcontroller_port",text:"\u003Cspan\u003E\u003Cclient-only\u003E\u003Ch1\u003EMicrocontroller Port\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003CModInfoCard :img=\"img\" :blockData=\"block\" :electricalData=\"electrical\" :title=\"title\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003EDescription\u003C\u002Fh2\u003E\n\u003Cp\u003EAn interface for microcontrollers. Ports can connect on all sides (not diagonally) and be part of a microcontroller network.\u003C\u002Fp\u003E\n\u003Cp\u003EPorts will be gray when unconfigured, teal when set to read and red when set to output. Ports will light up when there is non-zero (|V| &gt; 0.1 V) voltage input (for read) or output (for write).\u003C\u002Fp\u003E\n\u003Cp\u003EPorts can connect directly to any electrical block \u003Cem\u003Eexcept\u003C\u002Fem\u003E for other microcontroller ports.\u003C\u002Fp\u003E\n\u003Cp\u003ESee the \u003Ca href=\"\u002Fmicrocontroller\u002Fnetworks\"\u003Emicrocontroller networks\u003C\u002Fa\u003E page for usage information.\u003C\u002Fp\u003E\n\u003Ch2\u003ECrafting Recipe\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode\u003Esome code\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2\u003ECircuit Model\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003CWikiImage :float=\"false\" caption=\"Internal circuit model\" src=\"\u002Fimg\u002Fcircuit\u002Fmuc_port.png\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThe internal model depends on whether the port is set by the microcontroller as &quot;IN&quot; or &quot;OUT&quot;.\u003C\u002Fp\u003E\n\u003Ctable class=\"wiki_table\"\u003E\u003Cthead\u003E\n\u003Ctr\u003E\u003Cth\u003EState\u003C\u002Fth\u003E\u003Cth\u003EBehavior\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\u003Ctd\u003E\u003Cb style=\"color:#34ebe1\"\u003EIN\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EThe port can read voltage, all resistors are set to 1 MΩ and the internal fixed voltage source disabled (set to Hi-Z state)\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003E\u003Cb style=\"color:#e04c4c\"\u003EOUT\u003C\u002Fb\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EThe port can output voltage, all resistors are set to 0.01 Ω and the internal fixed voltage source is enabled.\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003E\u003Cstrong\u003ENONE\u003C\u002Fstrong\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EUndefined. Note IN \u002F OUT state should always be set when the microcontroller performs a read or write to a port, and that the port should be disabled when not connected.\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003Ch2\u003EData Values\u003C\u002Fh2\u003E\n\u003Ch3\u003EID\u003C\u002Fh3\u003E\n\u003Ctable class=\"wiki_table\"\u003E\u003Cthead\u003E\n\u003Ctr\u003E\u003Cth\u003EName\u003C\u002Fth\u003E\u003Cth\u003E\u003Ca href=\"https:\u002F\u002Fminecraft.fandom.com\u002Fwiki\u002FNamespaced_ID\"\u003ENamespaced ID\u003C\u002Fa\u003E\u003C\u002Fth\u003E\u003Cth\u003EForm\u003C\u002Fth\u003E\u003Cth\u003ETranslation Key\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\u003Ctd\u003EMicrocontroller Port\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Ekontrol:muc_port\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EBlock &amp; Item\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Eblock.kontrol.muc_port\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003Ch3\u003EBlock states\u003C\u002Fh3\u003E\n\u003Ctable class=\"wiki_table\"\u003E\u003Cthead\u003E\n\u003Ctr\u003E\u003Cth\u003EName\u003C\u002Fth\u003E\u003Cth\u003EDefault value\u003C\u002Fth\u003E\u003Cth\u003EAllowed values\u003C\u002Fth\u003E\u003Cth\u003EDescription\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\u003Ctd\u003E\u003Ccode\u003Ein\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E, \u003Ccode\u003Etrue\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EIs port set to read?\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003E\u003Ccode\u003Eout\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E, \u003Ccode\u003Etrue\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EIs port set to write?\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003E\u003Ccode\u003Eon\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E, \u003Ccode\u003Etrue\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\u003Ctd\u003EIs port currently reading \u002F writing \u003Ccode\u003Eabs(V) &gt; 0.1 V\u003C\u002Fcode\u003E?\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\n\u003Ch3\u003EBlock data\u003C\u002Fh3\u003E\n\u003Cp\u003EMicrocontroller port stores additional data in the form of a block entity:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003CWikiTree icon=\"nbt\u002Fcompound.png\" :data=\"block_entity_data\" :inherit=\"['electricalBlockEntity']\" title=\"\u003Cb\u003EBlock entity data\u003C\u002Fb\u003E\" \u002F\u003E\u003C\u002Fp\u003E\n\u003C\u002Fclient-only\u003E\u003C\u002Fspan\u003E",img:{img:"block\u002Fmuc_port.gif",small_images:["block\u002Fmuc_port.png"]},block:{renewable:b,stackable:64,tools:["Pickaxe"],blastResistance:c,hardness:c,luminant:7,luminantToggle:b,transparent:a,flammable:a,catchesFireFromLava:a},electrical:{maxOperatingVoltage:"0 V",thermalR:d,thermalC:d},title:"Microcontroller Port",block_entity_data:[{icon:"nbt\u002Fint.png",title:"portId:",text:"Numeric id of the port"}]}],fetch:{},mutations:void 0}}(false,true,3.5,"0.0")));